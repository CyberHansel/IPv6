SOLUTION TO ATTACK

>>>>>>>>>>>>>>>  IPV6 BASIC HEADERS <<<<<<<<<<<<<<

1. threat IP spoofing           -Changing IPv6 header Source Address field or IP spoofing. 
SOLUTION - Ingress Filtering [RFC2827 / BCP38(opens in a new tab)] and unicast Reverse Path Forwarding (uRPF) [RFC3704 / BCP84(opens in a new tab)]. These techniques filter packets received by a router based on their source address, denying packets that come from addresses not to be used on that network.
--------------------------------------------------------------------------------------------------------
2. threat Covert channel        - A Covert channel is a type of attack that allows the transfer of information between two network nodes that are not allowed to communicate. In IPv6, the basic headers can be used to create a covert channel sending information within Traffic Class (8 bits) and/or Flow Label (20 bits) fields.  For example, a PDF file can be divided into 28 bits pieces and sent packet by packet to a ready to receive destination, which will put all the pieces together and make the PDF file available in the receiving node.
SOLUTION  -  Intrusion Detection System (IDS) and Intrusion Prevention System (IPS) can be used to inspect packets. This allows you to inspect traffic and detect unusual or unexpected values in some fields, like for example the values in the flow label, which is expected to be 0 (zero).


>>>>>>>>>>>>>>>  IPV6 EXTENSION HEADERS <<<<<<<<<<<<<<

1. threat Routing Header type 0, RH0 -Do not use RH0 or do not allow the use of it. This can be achieved by ensuring that your IPv6 nodes follow RFC5095(opens in a new tab), i.e., the support for RH0 is removed. Extra operational measures can be used: Ingress filtering at the site border, and firewall policies that filter packets using RH0.
--------------------------------------------------------------------------------------------------------
2. threat Bypassing RA Filtering/RA-Guard using any Extension Header      -One possible malicious use of EHs is adding an EH where it is not supposed to be used. For example, if you tailor make an IPv6 packet by adding a Destination Option EH before the ICMPv6 RA message, the mechanisms that filter rogue RAs, like the RA-Guard mechanism, could fail. "While there is currently no legitimate use for IPv6 Extension Headers in ICMPv6 Router Advertisement messages, Neighbor Discovery [RFC4861(opens in a new tab)] implementations allow the use of Extension Headers with these messages, by simply ignoring the received options. Some RA-Guard implementations try to identify ICMPv6 Router Advertisement messages by simply looking at the "Next Header" field of the fixed IPv6 header, rather than following the entire header chain. As a result, such implementations fail to identify any ICMPv6 Router Advertisement messages that include any Extension Headers (for example, a Hop-by-Hop Options header, a Destination Options header, etc.), and can be easily circumvented."
SOLUTION - The solution is for your security tools to inspect the IPv6 header chain properly.
--------------------------------------------------------------------------------------------------------
2. threat Bypassing RA Filtering/RA-Guard using Fragment Extension Header       -attack uses the Fragment header. It depends on the security devices/software putting all fragments together to understand what packet is being sent. This is not easy to do as mechanisms like RA-Guard are implemented in layer 2 devices (switches). Security devices/software need all fragments to detect the RA.
SOLUTION - Avoiding attacks using fragmented NDP packets is simple: Do not use them and do not allow them to be used. This can be achieved by ensuring that your IPv6 nodes follow RFC6980 (opens in a new tab)which forbids fragmented NDP packets. Extra operational measures include using firewall policies to filter fragmented NDP. The protection can be made more generic by enforcing RFC7112 (opens in a new tab)so the IPv6 header chain should always go in the first fragment.
--------------------------------------------------------------------------------------------------------
3. threat Overlapping fragments      -Some OS do not properly handle fragments that overlap in this manner. This is the basis for the teardrop attack. Overlapping fragments may also be used in an attempt to bypass Intrusion Detection Systems (IDS). This is where part of an attack is sent in fragments along with additional random data. Future fragments may overwrite the random data with the remainder of the attack. If the completed datagram is not properly reassembled at the IDS, the attack will go undetected.
https://www.youtube.com/watch?v=LzRODkHDUgw
SOLUTION - When reassembling an IPv6 datagram, if one or more of its fragments are overlapping, the entire datagram (and any other fragments, including those not yet received) must be silently discarded.
--------------------------------------------------------------------------------------------------------
4. threat Not sending last fragment (DOS)       -In this case there's resource consumption on the destination host, which keeps waiting for the last fragment to put all parts together. This happens while using memory to store the received parts of the fragmented packet. If many of these unfinished fragmented packets are received it could cause memory exhaustion and stop any other communication.
SOLUTION - The IPv6 standard establishes a timeout mechanism with a default timer of 60 seconds: “If insufficient fragments are received to complete reassembly of a packet within 60 seconds of the reception of the first-arriving fragment of that packet, reassembly of that packet must be abandoned and all the fragments that have been received for that packet must be discarded.”
--------------------------------------------------------------------------------------------------------
5. threat "Atomic" fragments      -IPv6 atomic fragments are IPv6 packets that contain a Fragment Header with the fragment offset set to 0 and the M flag set to 0. In other words, it is an IPv6 packet that is fragmented into only one “fragment”. Processing of IPv6 atomic fragments as regular fragmented packets clearly provides an unnecessary vector to perform fragmentation-based attacks against non-fragmented traffic (i.e. IPv6 datagrams that are not really split into multiple pieces but include a Fragment Header).
SOLUTION - The solution is already available in the standards, to make sure IPv6 nodes support RFC6946(opens in a new tab). This establishes that atomic fragments have to be processed in isolation from any other packets and fragments.


>>>>>>>>>>>>>>>  ICMPv6 <<<<<<<<<<<<<<

ICMPv6 is used for many IPv6 related protocols, like NDP or MLD. For example, without NDP and its Address Resolution mechanism, it is not possible to discover the layer two address, making it impossible to send a packet to a neighbour or gateway router.
FILTERING WRONGLY ICMPv6 CAN BREAK IPv6

RECOMENDATION WHAT TO DO

RECOMENDATION 1      -The ICMPv6 Specification RFC4443 says that no ICMPv6 error messages should be sent in response to receiving a packet destined to a multicast address. (opens in a new tab)This avoids using ICMPv6 to discover hosts and being used as an amplification attack.

RECOMENDATION 2      -If an ICMPv6 informational message of unknown type is received, it must be silently discarded. This way, ICMPv6 can not be leveraged to discover hosts.

RECOMENDATION 3      -An ICMPv6 error message must not originate as a result of receiving the following: A packet sent as a link-layer multicast or as a link-layer broadcast

RECOMENDATION 4      -An ICMPv6 error message must not originate as a result of receiving the following: A packet whose source address does not uniquely identify a single node e.g. an IPv6 Unspecified Address, IPv6 multicast address, or an address known by the ICMP message originator as an IPv6 anycast address

TWO EXCEPTIONS        of receiving a packet destined to an IPv6 multicast address or a packet sent as a link-layer multicast or as a link-layer broadcast:
1 EXCEPTION The Packet Too Big Message [RFC4443_section3.2(opens in a new tab)] to allow Path MTU discovery to work for IPv6 multicast.
2 EXCEPTION The Parameter Problem Message, Code 2 [RFC4443_section3.4] reporting an unrecognised IPv6 option [RFC2460_section4.2] that has the Option Type highest-order two bits set to 10.








--------------------------------------------------------------------------------------------------------

--- Security Devices / Software must process the Full Chain of Headers
--- Firewalls must be able to filter based on Extension Headers - Also, firewalls should be able to deal with the “standard” EHs needed and supported by any IPv6 implementation [RFC8200 section 4(opens in a new tab)]: Hop-by-Hop Options, Fragment, Destination Options, Routing, Authentication (AH), Encapsulating Security Payload (ESP). For example, being able to filter packets based on these EHs.


FYI - only the source of the packets could fragment packets. This reduces the possibility of attacks based on overlapping fragments or tiny fragments.
FYI -


